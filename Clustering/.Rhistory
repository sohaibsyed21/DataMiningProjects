err<-mean(result$err.rate)
append(error_vec,err)
}
}
gc()
library("ISLR")
library(rpart)
library(rpart.plot)
library(randomForest)
library(caret)
df<-read.csv(file="hotel_bookings.csv")
set.seed(1122)
index <- sample(1:nrow(df), .90*dim(df)[1])
train.df <-df[index,]
test.df <-df[-index,]
num_of_pred<-8
n_tree<-c(250,500,750)
m_try<-c(floor(sqrt(num_of_pred)),floor(sqrt(num_of_pred)) + 1,floor(sqrt(num_of_pred))+2)
train.df$is_canceled <- as.character(train.df$is_canceled)
train.df$is_canceled<-as.factor(train.df$is_canceled)
error_vec<-data.frame(c())
for (a in n_tree){
for( b in m_try){
result<-randomForest(is_canceled~lead_time+market_segment+distribution_channel+previous_cancellations+deposit_type+customer_type+required_car_parking_spaces+total_of_special_requests,data=train.df,ntree=a,mtry=b)
err<-mean(result$err.rate)
append(error_vec,err)
}
}
gc()
result$confusion
result<-randomForest(is_canceled~lead_time+market_segment+distribution_channel+previous_cancellations+deposit_type+customer_type+required_car_parking_spaces+total_of_special_requests,data=train.df,ntree=250,mtry=2)
library(randomForest)
library("ISLR")
library(rpart)
library(rpart.plot)
library(randomForest)
library(caret)
df<-read.csv(file="hotel_bookings.csv")
set.seed(1122)
index <- sample(1:nrow(df), .90*dim(df)[1])
train.df <-df[index,]
test.df <-df[-index,]
train.df$is_canceled <- as.character(train.df$is_canceled)
train.df$is_canceled<-as.factor(train.df$is_canceled)
error_vec<-data.frame(c())
result<-randomForest(is_canceled~lead_time+market_segment+distribution_channel+previous_cancellations+deposit_type+customer_type+required_car_parking_spaces+total_of_special_requests,data=train.df,ntree=250,mtry=2)
err<-mean(result$err.rate)
append(error_vec,err)
result$confusion
result<-randomForest(is_canceled~lead_time+market_segment+distribution_channel+previous_cancellations+deposit_type+customer_type+required_car_parking_spaces+total_of_special_requests,data=train.df,ntree=250,mtry=3)
err<-mean(result$err.rate)
append(error_vec,err)
error_vec
View(error_vec)
error_vec<-data.frame(c())
gc()
error_vec<-data.frame(c())
append(error_vec,err)
err<-mean(result$err.rate)
error_vec
error_vec<-c()
error_vec<-data.frame(c())
error_vec<-data.frame(c("error"))
error_vec<-data.frame(c("error","bl"))
error_vec<-data.frame()
append(error_vec,1)
append(error_vec,c(1))
error_vec<-data.frame()
append(error_vec,c(1))
error_vec<-c("numeric", 9)
error_vec
error_vec<-vector("numeric", 9)
error_vec
append(error_vec,err)
append(error_vec,1)
append(error_vec,1)
error_vec<-vector("numeric")
append(error_vec,1)
library("ISLR")
library(rpart)
library(rpart.plot)
library(randomForest)
library(caret)
df<-read.csv(file="hotel_bookings.csv")
set.seed(1122)
index <- sample(1:nrow(df), .90*dim(df)[1])
train.df <-df[index,]
test.df <-df[-index,]
num_of_pred<-8
n_tree<-c(250,500,750)
m_try<-c(floor(sqrt(num_of_pred)),floor(sqrt(num_of_pred)) + 1,floor(sqrt(num_of_pred))+2)
train.df$is_canceled <- as.character(train.df$is_canceled)
train.df$is_canceled<-as.factor(train.df$is_canceled)
error_vec<-vector("numeric")
result<-randomForest(is_canceled~lead_time+market_segment+distribution_channel+previous_cancellations+deposit_type+customer_type+required_car_parking_spaces+total_of_special_requests,data=train.df,ntree=250,mtry=3)
err<-mean(result$err.rate)
append(error_vec,err)
error_vec
error_vec
error_vec<-vector("numeric")
err<-mean(result$err.rate)
err<-mean(result$err.rate)
err
append(error_vec,err)
error_vec
append(error_vec,numeric(err))
error_vec
append(error_vec,1)
error_vec
append(error_vec,1)
error_vec
error_vec<-vector("numeric")
error_vec
error_vec<-vector("numeric")
error_vec
append(error_vec,45)
error_vec
?vector
error_vec<-c()
error_vec<-cbind(1)
error_vec
result<-randomForest(is_canceled~lead_time+market_segment+distribution_channel+previous_cancellations+deposit_type+customer_type+required_car_parking_spaces+total_of_special_requests,data=train.df,ntree=250,mtry=2)
error_vec<-cbind(mean(result$err.rate))
error_vec
gc()
library("ISLR")
library(rpart)
library(rpart.plot)
library(randomForest)
library(caret)
df<-read.csv(file="hotel_bookings.csv")
set.seed(1122)
index <- sample(1:nrow(df), .90*dim(df)[1])
train.df <-df[index,]
test.df <-df[-index,]
num_of_pred<-8
n_tree<-c(250,500,750)
m_try<-c(floor(sqrt(num_of_pred)),floor(sqrt(num_of_pred)) + 1,floor(sqrt(num_of_pred))+2)
train.df$is_canceled <- as.character(train.df$is_canceled)
train.df$is_canceled<-as.factor(train.df$is_canceled)
error_vec<-c()
for (a in n_tree){
for(b in m_try){
result<-randomForest(is_canceled~lead_time+market_segment+distribution_channel+previous_cancellations+deposit_type+customer_type+required_car_parking_spaces+total_of_special_requests,data=train.df,ntree=250,mtry=2)
error_vec<-cbind(mean(result$err.rate))
}
}
library("ISLR")
library(rpart)
library(rpart.plot)
library(randomForest)
library(caret)
df<-read.csv(file="hotel_bookings.csv")
set.seed(1122)
index <- sample(1:nrow(df), .90*dim(df)[1])
train.df <-df[index,]
test.df <-df[-index,]
num_of_pred<-8
n_tree<-c(250,500,750)
m_try<-c(floor(sqrt(num_of_pred)),floor(sqrt(num_of_pred)) + 1,floor(sqrt(num_of_pred))+2)
train.df$is_canceled <- as.character(train.df$is_canceled)
train.df$is_canceled<-as.factor(train.df$is_canceled)
error_vec<-c()
for (a in n_tree){
for(b in m_try){
result<-randomForest(is_canceled~lead_time+market_segment+distribution_channel+previous_cancellations+deposit_type+customer_type+required_car_parking_spaces+total_of_special_requests,data=train.df,ntree=a,mtry=b)
error_vec<-cbind(mean(result$err.rate))
}
}
error_vec
result<-randomForest(is_canceled~lead_time+market_segment+distribution_channel+previous_cancellations+deposit_type+customer_type+required_car_parking_spaces+total_of_special_requests,data=train.df,ntree=250,mtry=2)
result
gc()
library("ISLR")
library(rpart)
library(rpart.plot)
library(randomForest)
library(caret)
df<-read.csv(file="hotel_bookings.csv")
set.seed(1122)
index <- sample(1:nrow(df), .90*dim(df)[1])
train.df <-df[index,]
test.df <-df[-index,]
num_of_pred<-8
n_tree<-c(250,500,750)
m_try<-c(floor(sqrt(num_of_pred)),floor(sqrt(num_of_pred)) + 1,floor(sqrt(num_of_pred))+2)
train.df$is_canceled <- as.character(train.df$is_canceled)
train.df$is_canceled<-as.factor(train.df$is_canceled)
error_vec<-c()
for (a in n_tree){
for(b in m_try){
result<-randomForest(is_canceled~lead_time+market_segment+distribution_channel+previous_cancellations+deposit_type+customer_type+required_car_parking_spaces+total_of_special_requests,data=train.df,ntree=250,mtry=2)
error_vec<-cbind(mean(result$err.rate))
}
}
gc()
library("ISLR")
library(rpart)
library(rpart.plot)
library(randomForest)
library(caret)
df<-read.csv(file="hotel_bookings.csv")
set.seed(1122)
index <- sample(1:nrow(df), .90*dim(df)[1])
train.df <-df[index,]
test.df <-df[-index,]
num_of_pred<-8
n_tree<-c(250,500,750)
m_try<-c(floor(sqrt(num_of_pred)),floor(sqrt(num_of_pred)) + 1,floor(sqrt(num_of_pred))+2)
train.df$is_canceled <- as.character(train.df$is_canceled)
train.df$is_canceled<-as.factor(train.df$is_canceled)
error_vec<-c()
for (a in n_tree){
for(b in m_try){
result<-randomForest(is_canceled~lead_time+market_segment+distribution_channel+previous_cancellations+deposit_type+customer_type+required_car_parking_spaces+total_of_special_requests,data=train.df,ntree=a,mtry=b)
error_vec<-cbind(mean(result$err.rate))
}
}
gc()
library("ISLR")
library(rpart)
library(rpart.plot)
library(randomForest)
library(caret)
df<-read.csv(file="hotel_bookings.csv")
set.seed(1122)
index <- sample(1:nrow(df), .90*dim(df)[1])
train.df <-df[index,]
test.df <-df[-index,]
num_of_pred<-8
n_tree<-c(250,500,750)
m_try<-c(floor(sqrt(num_of_pred)),floor(sqrt(num_of_pred)) + 1,floor(sqrt(num_of_pred))+2)
train.df$is_canceled <- as.character(train.df$is_canceled)
train.df$is_canceled<-as.factor(train.df$is_canceled)
error_vec<-c()
for (a in n_tree){
for(b in m_try){
randomForest(is_canceled~lead_time+market_segment+distribution_channel+previous_cancellations+deposit_type+customer_type+required_car_parking_spaces+total_of_special_requests,data=train.df,ntree=a,mtry=b)
}
}
library(rpart)
library(caret)
library(rpart.plot)
library(randomForest)
setwd("/home/vkg/IIT/CS422/lectures/lecture-5")
library(rpart)
library(caret)
library(rpart.plot)
library(randomForest)
set.seed(1122)
df <- read.csv("german_credit.csv", sep=",", comment.char = "#")
df$Creditability <- as.factor(df$Creditability)
indx <- sample(1:nrow(df), 200)
train <- df[-indx, ]
test <- df[indx, ]
model <- randomForest(Creditability ~ ., data=train, mtry=6)
pred <- predict(model, test, type="class")
confusionMatrix(pred, as.factor(test$Creditability), positive='1')
print(model)
library("ISLR")
library(rpart)
library(rpart.plot)
library(randomForest)
library(caret)
df<-read.csv(file="hotel_bookings.csv")
set.seed(1122)
index <- sample(1:nrow(df), .90*dim(df)[1])
train.df <-df[index,]
test.df <-df[-index,]
num_of_pred<-8
n_tree<-c(250,500,750)
m_try<-c(floor(sqrt(num_of_pred)),floor(sqrt(num_of_pred)) + 1,floor(sqrt(num_of_pred))+2)
train.df$is_canceled <- as.character(train.df$is_canceled)
train.df$is_canceled<-as.factor(train.df$is_canceled)
error_vec<-c()
for (a in n_tree){
for(b in m_try){
result<-randomForest(is_canceled~lead_time+market_segment+distribution_channel+previous_cancellations+deposit_type+customer_type+required_car_parking_spaces+total_of_special_requests,data=train.df,ntree=a,mtry=b)
pred <- predict(result, test.df, type="class")
confusionMatrix(pred, as.factor(test.df$is_canceled), positive='1')
}
}
library("ISLR")
library(rpart)
library(rpart.plot)
library(randomForest)
library(caret)
df<-read.csv(file="hotel_bookings.csv")
set.seed(1122)
index <- sample(1:nrow(df), .90*dim(df)[1])
train.df <-df[index,]
test.df <-df[-index,]
num_of_pred<-8
n_tree<-c(250,500,750)
m_try<-c(floor(sqrt(num_of_pred)),floor(sqrt(num_of_pred)) + 1,floor(sqrt(num_of_pred))+2)
train.df$is_canceled <- as.character(train.df$is_canceled)
train.df$is_canceled<-as.factor(train.df$is_canceled)
for (a in n_tree){
for(b in m_try){
result<-randomForest(is_canceled~lead_time+market_segment+distribution_channel+previous_cancellations+deposit_type+customer_type+required_car_parking_spaces+total_of_special_requests,data=train.df,ntree=a,mtry=b)
}
}
gc()
library("ISLR")
library(rpart)
library(rpart.plot)
library(randomForest)
library(caret)
df<-read.csv(file="hotel_bookings.csv")
set.seed(1122)
index <- sample(1:nrow(df), .90*dim(df)[1])
train.df <-df[index,]
test.df <-df[-index,]
num_of_pred<-8
n_tree<-c(250,500,750)
m_try<-c(floor(sqrt(num_of_pred)),floor(sqrt(num_of_pred)) + 1,floor(sqrt(num_of_pred))+2)
train.df$is_canceled <- as.character(train.df$is_canceled)
train.df$is_canceled<-as.factor(train.df$is_canceled)
for (a in n_tree){
for(b in m_try){
result<-randomForest(is_canceled~lead_time+market_segment+distribution_channel+previous_cancellations+deposit_type+customer_type+required_car_parking_spaces+total_of_special_requests,data=train.df,ntree=a,mtry=b)
}
}
gc()
gc()
memory.limit(100)
memory.limit(10000)
library("ISLR")
library(rpart)
library(rpart.plot)
library(randomForest)
library(caret)
df<-read.csv(file="hotel_bookings.csv")
set.seed(1122)
index <- sample(1:nrow(df), .90*dim(df)[1])
train.df <-df[index,]
test.df <-df[-index,]
num_of_pred<-8
n_tree<-c(250,500,750)
m_try<-c(floor(sqrt(num_of_pred)),floor(sqrt(num_of_pred)) + 1,floor(sqrt(num_of_pred))+2)
train.df$is_canceled <- as.character(train.df$is_canceled)
train.df$is_canceled<-as.factor(train.df$is_canceled)
test.df$is_canceled <- as.character(test.df$is_canceled)
error_vec<-c()
pred_vec<-c()
for (a in m_try){
for(b in n_tree){
model<-randomForest(is_canceled~lead_time+market_segment+distribution_channel+previous_cancellations+deposit_type+customer_type+required_car_parking_spaces+total_of_special_requests,data=train.df,ntree=b,mtry=a)
error_vec<-c(error_vec,mean(model$err.rate))
pred<-predict(model, test.df, type="class")
pred_vec<-c(pred_vec,confusionMatrix(pred,as.factor(test.df$is_canceled), positive='1'))
rm(model,pred)
}
}
rm(model,pred)
}
error_vec
pred_vec
gc()
gc()
memory.limit(10000)
library("ISLR")
library(rpart)
library(rpart.plot)
library(randomForest)
library(caret)
df<-read.csv(file="hotel_bookings.csv")
set.seed(1122)
index <- sample(1:nrow(df), .90*dim(df)[1])
train.df <-df[index,]
test.df <-df[-index,]
train.df$is_canceled <- as.character(train.df$is_canceled)
train.df$is_canceled<-as.factor(train.df$is_canceled)
test.df$is_canceled <- as.character(test.df$is_canceled)
error_vec<-c()
pred_vec<-c()
for (a in c(2,3,4)){
for(b in c(250,500,750)){
model<-randomForest(is_canceled~lead_time+market_segment+distribution_channel+previous_cancellations+deposit_type+customer_type+required_car_parking_spaces+total_of_special_requests,data=train.df,ntree=b,mtry=a)
error_vec<-c(error_vec,mean(model$err.rate))
pred<-predict(model, test.df, type="class")
pred_vec<-c(pred_vec,confusionMatrix(pred,as.factor(test.df$is_canceled), positive='1'),c(a,b))
rm(model,pred)
}
}
error_vec
pred_vec
pred_vec[1]
pred_vec[1,2,3,4]
pred_vec[1]
pred_vec[6]
memory.limit(100)
memory.limit()
memory.limit()?
cd ..
ls
?memory.limit
memory.size()
memory.size(max)
memory.size(true)
memory.size()
memory.size(FALSE)
memory.limit(200)
memory.limit(800)
memory.limit(8000)
memory.limit(11000)
memory.limit()
memory.size()
?confusionmatrix
?confusionMatrix
?confusionMatrix()
confusionMatrix?
?
-
?
?abline
abline(h=.03)
?fviz_cluster
library(cluster)
library(factoextra)
# The attribute that I removed was "C" the top canines.
# The data does not *need* to be standardized, because the range of the data points isn't large, and we aren't using neural networks.
df<-read.table("file19.txt",header=TRUE,row.names=1)
fviz_nbclust(df, kmeans, method="wss")
fviz_nbclust(df, kmeans, method="silhouette")
#Using both graphs it seems like 3 clusters is optimal because that is where the "elbow" forms and it is also not over fitting according to silhouette graph.
k <- kmeans(df, centers=3, nstart=25)
fviz_cluster(k, df)
size_of_cluster<- k$size
size_of_cluster
# cluster 1: 18 obs, cluster 2: 28 Obs, cluster 3: 20 obs
cat(k$totss, "is the total SSE")
cat(k$withinss[1], "is the SSE of cluster 1.\n", k$withinss[2],"is the SSE of cluster 2.\n",k$withinss[3],"is the SSE of cluster 3." )
#Cluster 1
which(k$cluster==1)
#Cluster 2
which(k$cluster==2)
#Cluster 3
which(k$cluster==3)
# the clusters make sense because if we split the clusters into animals that have certain diets. Carnivores, herbivores, and omnivores. Cluster 1 belongs to herbivores, with some error such as coyotes. Cluster 2 belongs to carnivores, and cluster 3 belong to omnivores.
dfpart2<-read.csv("s1.csv")
#Yes, it is necessary to scale the data because the range of values is large.
plot(dfpart2)
#15 clusters are visible. They are not well separated well because there are certain points that look closer to another cluster rather than the center of its own cluster.
fviz_nbclust(dfpart2, kmeans, method="wss")
fviz_nbclust(df, kmeans, method="silhouette")
# 4 Clusters is the optimal choice for k means clustering
dfp2scale<-scale(dfpart2,center=F)
k2 <- kmeans(dfp2scale, centers=4, nstart=25)
fviz_cluster(k2, dfp2scale)
# K-means clustered the data in 4 large clusters separated by quadrant. It is not the optimal clustering for this data set.
library(dbscan)
library(fpc)
# I will use 4 MinPts because there are 2 dimensions.
kNNdistplot(dfp2scale, k = 4)
db <- fpc::dbscan(dfp2scale, eps = 0.085, MinPts = 4)
fviz_cluster(db, dfp2scale, stand = FALSE, ellipse = F, geom = "point")
kNNdistplot(dfp2scale, k = 4,l=.03)
kNNdistplot(dfp2scale, k = 4)
db <- fpc::dbscan(dfp2scale, eps = 0.03, MinPts = 4)
fviz_cluster(db, dfp2scale, stand = FALSE, ellipse = F, geom = "point")
kNNdistplot(dfp2scale, k = 4)
db <- fpc::dbscan(dfp2scale, eps = 0.03, MinPts = 4)
fviz_cluster(db, dfp2scale, stand = FALSE, ellipse = F, geom = "point")
paste("At minPts = 4, eps = .03, there are 24 clusters.")
setwd("~/RStuff/HW8")
library(dbscan)
library(fpc)
# I will use 4 MinPts because there are 2 dimensions.
kNNdistplot(dfp2scale, k = 4)
db <- fpc::dbscan(dfp2scale, eps = 0.03, MinPts = 4)
fviz_cluster(db, dfp2scale, stand = FALSE, ellipse = F, geom = "point")
library(cluster)
library(factoextra)
# The attribute that I removed was "C" the top canines.
# The data does not *need* to be standardized, because the range of the data points isn't large, and we aren't using neural networks.
df<-read.table("file19.txt",header=TRUE,row.names=1)
fviz_nbclust(df, kmeans, method="wss")
fviz_nbclust(df, kmeans, method="silhouette")
#Using both graphs it seems like 3 clusters is optimal because that is where the "elbow" forms and it is also not over fitting according to silhouette graph.
k <- kmeans(df, centers=3, nstart=25)
fviz_cluster(k, df)
size_of_cluster<- k$size
size_of_cluster
# cluster 1: 18 obs, cluster 2: 28 Obs, cluster 3: 20 obs
cat(k$totss, "is the total SSE")
cat(k$withinss[1], "is the SSE of cluster 1.\n", k$withinss[2],"is the SSE of cluster 2.\n",k$withinss[3],"is the SSE of cluster 3." )
#Cluster 1
which(k$cluster==1)
#Cluster 2
which(k$cluster==2)
#Cluster 3
which(k$cluster==3)
# the clusters make sense because if we split the clusters into animals that have certain diets. Carnivores, herbivores, and omnivores. Cluster 1 belongs to herbivores, with some error such as coyotes. Cluster 2 belongs to carnivores, and cluster 3 belong to omnivores.
dfpart2<-read.csv("s1.csv")
#Yes, it is necessary to scale the data because the range of values is large.
plot(dfpart2)
#15 clusters are visible. They are not well separated well because there are certain points that look closer to another cluster rather than the center of its own cluster.
fviz_nbclust(dfpart2, kmeans, method="wss")
fviz_nbclust(df, kmeans, method="silhouette")
# 4 Clusters is the optimal choice for k means clustering
dfp2scale<-scale(dfpart2,center=F)
k2 <- kmeans(dfp2scale, centers=4, nstart=25)
fviz_cluster(k2, dfp2scale)
# K-means clustered the data in 4 large clusters separated by quadrant. It is not the optimal clustering for this data set.
library(dbscan)
library(fpc)
# I will use 4 MinPts because there are 2 dimensions.
kNNdistplot(dfp2scale, k = 4)
db <- fpc::dbscan(dfp2scale, eps = 0.03, MinPts = 4)
fviz_cluster(db, dfp2scale, stand = FALSE, ellipse = F, geom = "point")
paste("At minPts = 4, eps = .03, there are 24 clusters.")
