trans75k <- read.transactions("tr-75k-canonical.csv", sep=",")
fset1k<-apriori(trans1k, parameter=list(support=0.1,confidence=.8, target="frequent itemsets"))
fset5k<-apriori(trans5k, parameter=list(support=0.1,confidence=.8, target="frequent itemsets"))
fset20k<-apriori(trans20k, parameter=list(support=0.1,confidence=.8, target="frequent itemsets"))
fset75k<-apriori(trans75k, parameter=list(support=0.1,confidence=.8, target="frequent itemsets"))
fset1k<-apriori(trans1k, parameter=list(support=0.1,confidence=.8, target="frequent itemsets"))
fset5k<-apriori(trans5k, parameter=list(support=0.1,confidence=.8, target="frequent itemsets"))
fset20k<-apriori(trans20k, parameter=list(support=0.1,confidence=.8, target="frequent itemsets"))
fset75k<-apriori(trans75k, parameter=list(support=0.1,confidence=.8, target="frequent itemsets"))
inspect(sort(fset1k, decreasing = T, by="count"))
inspect(sort(fset5k, decreasing = T, by="count"))
inspect(sort(fset20k, decreasing = T, by="count"))
inspect(sort(fset75k, decreasing = T, by="count"))
fset1k<-apriori(trans1k, parameter=list(support=0.1,confidence=.8, target="frequent itemsets"))
fset5k<-apriori(trans5k, parameter=list(support=0.1,confidence=.8, target="frequent itemsets"))
fset20k<-apriori(trans20k, parameter=list(support=0.1,confidence=.8, target="frequent itemsets"))
fset75k<-apriori(trans75k, parameter=list(support=0.1,confidence=.8, target="frequent itemsets"))
inspect(sort(fset1k, decreasing = T, by="count"))
inspect(sort(fset5k, decreasing = T, by="count"))
inspect(sort(fset20k, decreasing = T, by="count"))
inspect(sort(fset75k, decreasing = T, by="count"))
rules1k <- apriori(trans1k, parameter = list(support=0.01))
rules5k <- apriori(trans5k, parameter = list(support=0.01))
rules20k <- apriori(trans20k, parameter = list(support=0.01))
rules75k <- apriori(trans75k, parameter = list(support=0.01))
fset1k<-apriori(trans1k, parameter=list(support=0.08, target="frequent itemsets"))
fset5k<-apriori(trans5k, parameter=list(support=0.08, target="frequent itemsets"))
fset20k<-apriori(trans20k, parameter=list(support=0.08, target="frequent itemsets"))
fset75k<-apriori(trans75k, parameter=list(support=0.08, target="frequent itemsets"))
inspect(sort(fset1k, decreasing = T, by="count"))
inspect(sort(fset5k, decreasing = T, by="count"))
inspect(sort(fset20k, decreasing = T, by="count"))
inspect(sort(fset75k, decreasing = T, by="count"))
rules1k <- apriori(trans1k, parameter = list(support=0.01))
rules5k <- apriori(trans5k, parameter = list(support=0.01))
rules20k <- apriori(trans20k, parameter = list(support=0.01))
rules75k <- apriori(trans75k, parameter = list(support=0.01))
fset1k<-apriori(trans1k, parameter=list(support=0.08, target="frequent itemsets"))
fset5k<-apriori(trans5k, parameter=list(support=0.08, target="frequent itemsets"))
fset20k<-apriori(trans20k, parameter=list(support=0.08, target="frequent itemsets"))
fset75k<-apriori(trans75k, parameter=list(support=0.08, target="frequent itemsets"))
inspect(sort(fset1k, decreasing = T, by="count"))
inspect(sort(fset5k, decreasing = T, by="count"))
inspect(sort(fset20k, decreasing = T, by="count"))
inspect(sort(fset75k, decreasing = T, by="count"))
rules1k <- apriori(trans1k, parameter = list(support=0.08,confidence=.7))
rules5k <- apriori(trans5k, parameter = list(support=0.08,confidence=.7))
rules20k <- apriori(trans20k, parameter = list(support=0.08,confidence=.7))
rules75k <- apriori(trans75k, parameter = list(support=0.08,confidence=.7))
fset1k<-apriori(trans1k, parameter=list(support=0.08, target="frequent itemsets"))
fset5k<-apriori(trans5k, parameter=list(support=0.08, target="frequent itemsets"))
fset20k<-apriori(trans20k, parameter=list(support=0.08, target="frequent itemsets"))
fset75k<-apriori(trans75k, parameter=list(support=0.08, target="frequent itemsets"))
inspect(sort(fset1k, decreasing = T, by="count"))
inspect(sort(fset5k, decreasing = T, by="count"))
inspect(sort(fset20k, decreasing = T, by="count"))
inspect(sort(fset75k, decreasing = T, by="count"))
rules1k <- apriori(trans1k, parameter = list(support=0.08,confidence=.7))
rules5k <- apriori(trans5k, parameter = list(support=0.08,confidence=.7))
rules20k <- apriori(trans20k, parameter = list(support=0.08,confidence=.7))
rules75k <- apriori(trans75k, parameter = list(support=0.08,confidence=.7))
inspect(head(rules1k, by="confidence"))
inspect(head(rules5k, by="confidence"))
inspect(head(rules20k, by="confidence"))
inspect(head(rules75k, by="confidence"))
fset1k<-apriori(trans1k, parameter=list(support=0.08, target="frequent itemsets"))
fset5k<-apriori(trans5k, parameter=list(support=0.08, target="frequent itemsets"))
fset20k<-apriori(trans20k, parameter=list(support=0.08, target="frequent itemsets"))
fset75k<-apriori(trans75k, parameter=list(support=0.08, target="frequent itemsets"))
inspect(sort(fset1k, decreasing = T, by="count"))
inspect(sort(fset5k, decreasing = T, by="count"))
inspect(sort(fset20k, decreasing = T, by="count"))
inspect(sort(fset75k, decreasing = T, by="count"))
rules1k <- apriori(trans1k, parameter = list(support=0.08,confidence=.5))
rules5k <- apriori(trans5k, parameter = list(support=0.08,confidence=.5))
rules20k <- apriori(trans20k, parameter = list(support=0.08,confidence=.5))
rules75k <- apriori(trans75k, parameter = list(support=0.08,confidence=.5))
inspect(head(rules1k, by="confidence"))
inspect(head(rules5k, by="confidence"))
inspect(head(rules20k, by="confidence"))
inspect(head(rules75k, by="confidence"))
fset1k<-apriori(trans1k, parameter=list(support=0.08, target="frequent itemsets"))
fset5k<-apriori(trans5k, parameter=list(support=0.08, target="frequent itemsets"))
fset20k<-apriori(trans20k, parameter=list(support=0.08, target="frequent itemsets"))
fset75k<-apriori(trans75k, parameter=list(support=0.08, target="frequent itemsets"))
inspect(sort(fset1k, decreasing = T, by="count"))
inspect(sort(fset5k, decreasing = T, by="count"))
inspect(sort(fset20k, decreasing = T, by="count"))
inspect(sort(fset75k, decreasing = T, by="count"))
rules1k <- apriori(trans1k, parameter = list(support=0.06,confidence=.5))
rules5k <- apriori(trans5k, parameter = list(support=0.06,confidence=.5))
rules20k <- apriori(trans20k, parameter = list(support=0.06,confidence=.5))
rules75k <- apriori(trans75k, parameter = list(support=0.06,confidence=.5))
inspect(head(rules1k, by="confidence"))
inspect(head(rules5k, by="confidence"))
inspect(head(rules20k, by="confidence"))
inspect(head(rules75k, by="confidence"))
fset1k<-apriori(trans1k, parameter=list(support=0.06, target="frequent itemsets"))
fset5k<-apriori(trans5k, parameter=list(support=0.06, target="frequent itemsets"))
fset20k<-apriori(trans20k, parameter=list(support=0.06, target="frequent itemsets"))
fset75k<-apriori(trans75k, parameter=list(support=0.06, target="frequent itemsets"))
inspect(sort(fset1k, decreasing = T, by="count"))
inspect(sort(fset5k, decreasing = T, by="count"))
inspect(sort(fset20k, decreasing = T, by="count"))
inspect(sort(fset75k, decreasing = T, by="count"))
rules1k <- apriori(trans1k, parameter = list(support=0.06,confidence=.5))
rules5k <- apriori(trans5k, parameter = list(support=0.06,confidence=.5))
rules20k <- apriori(trans20k, parameter = list(support=0.06,confidence=.5))
rules75k <- apriori(trans75k, parameter = list(support=0.06,confidence=.5))
inspect(head(rules1k, by="confidence"))
inspect(head(rules5k, by="confidence"))
inspect(head(rules20k, by="confidence"))
inspect(head(rules75k, by="confidence"))
fset1k<-apriori(trans1k, parameter=list(support=0.04, target="frequent itemsets"))
fset5k<-apriori(trans5k, parameter=list(support=0.04, target="frequent itemsets"))
fset20k<-apriori(trans20k, parameter=list(support=0.04, target="frequent itemsets"))
fset75k<-apriori(trans75k, parameter=list(support=0.04, target="frequent itemsets"))
inspect(sort(fset1k, decreasing = T, by="count"))
inspect(sort(fset5k, decreasing = T, by="count"))
inspect(sort(fset20k, decreasing = T, by="count"))
inspect(sort(fset75k, decreasing = T, by="count"))
rules1k <- apriori(trans1k, parameter = list(support=0.04,confidence=.5))
rules5k <- apriori(trans5k, parameter = list(support=0.04,confidence=.5))
rules20k <- apriori(trans20k, parameter = list(support=0.04,confidence=.5))
rules75k <- apriori(trans75k, parameter = list(support=0.04,confidence=.5))
inspect(head(rules1k, by="confidence"))
inspect(head(rules5k, by="confidence"))
inspect(head(rules20k, by="confidence"))
inspect(head(rules75k, by="confidence"))
fset1k<-apriori(trans1k, parameter=list(support=0.04, target="frequent itemsets"))
fset5k<-apriori(trans5k, parameter=list(support=0.04, target="frequent itemsets"))
fset20k<-apriori(trans20k, parameter=list(support=0.04, target="frequent itemsets"))
fset75k<-apriori(trans75k, parameter=list(support=0.04, target="frequent itemsets"))
inspect(sort(fset1k, decreasing = T, by="count"))
inspect(sort(fset5k, decreasing = T, by="count"))
inspect(sort(fset20k, decreasing = T, by="count"))
inspect(sort(fset75k, decreasing = T, by="count"))
rules1k <- apriori(trans1k, parameter = list(support=0.04,confidence=.7))
rules5k <- apriori(trans5k, parameter = list(support=0.04,confidence=.7))
rules20k <- apriori(trans20k, parameter = list(support=0.04,confidence=.7))
rules75k <- apriori(trans75k, parameter = list(support=0.04,confidence=.7))
inspect(head(rules1k, by="confidence"))
inspect(head(rules5k, by="confidence"))
inspect(head(rules20k, by="confidence"))
inspect(head(rules75k, by="confidence"))
fset1k<-apriori(trans1k, parameter=list(support=0.035, target="frequent itemsets"))
fset5k<-apriori(trans5k, parameter=list(support=0.035, target="frequent itemsets"))
fset20k<-apriori(trans20k, parameter=list(support=0.035, target="frequent itemsets"))
fset75k<-apriori(trans75k, parameter=list(support=0.035, target="frequent itemsets"))
inspect(sort(fset1k, decreasing = T, by="count"))
inspect(sort(fset5k, decreasing = T, by="count"))
inspect(sort(fset20k, decreasing = T, by="count"))
inspect(sort(fset75k, decreasing = T, by="count"))
rules1k <- apriori(trans1k, parameter = list(support=0.035,confidence=.7))
rules5k <- apriori(trans5k, parameter = list(support=0.035,confidence=.7))
rules20k <- apriori(trans20k, parameter = list(support=0.035,confidence=.7))
rules75k <- apriori(trans75k, parameter = list(support=0.035,confidence=.7))
inspect(head(rules1k, by="confidence"))
inspect(head(rules5k, by="confidence"))
inspect(head(rules20k, by="confidence"))
inspect(head(rules75k, by="confidence"))
fset1k<-apriori(trans1k, parameter=list(support=0.035, target="frequent itemsets"))
fset5k<-apriori(trans5k, parameter=list(support=0.035, target="frequent itemsets"))
fset20k<-apriori(trans20k, parameter=list(support=0.035, target="frequent itemsets"))
fset75k<-apriori(trans75k, parameter=list(support=0.035, target="frequent itemsets"))
inspect(sort(fset1k, decreasing = T, by="count"))
inspect(sort(fset5k, decreasing = T, by="count"))
inspect(sort(fset20k, decreasing = T, by="count"))
inspect(sort(fset75k, decreasing = T, by="count"))
rules1k <- apriori(trans1k, parameter = list(support=0.035,confidence=.7))
rules5k <- apriori(trans5k, parameter = list(support=0.035,confidence=.7))
rules20k <- apriori(trans20k, parameter = list(support=0.035,confidence=.7))
rules75k <- apriori(trans75k, parameter = list(support=0.035,confidence=.7))
inspect(sort(rules1k, by="confidence"))
inspect(sort(rules5k, by="confidence"))
inspect(sort(rules20k, by="confidence"))
inspect(sort(rules75k, by="confidence"))
fset1k<-apriori(trans1k, parameter=list(support=0.04, target="frequent itemsets"))
fset5k<-apriori(trans5k, parameter=list(support=0.04, target="frequent itemsets"))
fset20k<-apriori(trans20k, parameter=list(support=0.04, target="frequent itemsets"))
fset75k<-apriori(trans75k, parameter=list(support=0.04, target="frequent itemsets"))
inspect(sort(fset1k, decreasing = T, by="count"))
inspect(sort(fset5k, decreasing = T, by="count"))
inspect(sort(fset20k, decreasing = T, by="count"))
inspect(sort(fset75k, decreasing = T, by="count"))
rules1k <- apriori(trans1k, parameter = list(support=0.04,confidence=.7))
rules5k <- apriori(trans5k, parameter = list(support=0.04,confidence=.7))
rules20k <- apriori(trans20k, parameter = list(support=0.04,confidence=.7))
rules75k <- apriori(trans75k, parameter = list(support=0.04,confidence=.7))
inspect(sort(rules1k, by="confidence"))
inspect(sort(rules5k, by="confidence"))
inspect(sort(rules20k, by="confidence"))
inspect(sort(rules75k, by="confidence"))
fset1k<-apriori(trans1k, parameter=list(support=0.035, target="frequent itemsets"))
fset5k<-apriori(trans5k, parameter=list(support=0.035, target="frequent itemsets"))
fset20k<-apriori(trans20k, parameter=list(support=0.035, target="frequent itemsets"))
fset75k<-apriori(trans75k, parameter=list(support=0.035, target="frequent itemsets"))
inspect(sort(fset1k, decreasing = T, by="count"))
inspect(sort(fset5k, decreasing = T, by="count"))
inspect(sort(fset20k, decreasing = T, by="count"))
inspect(sort(fset75k, decreasing = T, by="count"))
rules1k <- apriori(trans1k, parameter = list(support=0.035,confidence=.7))
rules5k <- apriori(trans5k, parameter = list(support=0.035,confidence=.7))
rules20k <- apriori(trans20k, parameter = list(support=0.035,confidence=.7))
rules75k <- apriori(trans75k, parameter = list(support=0.035,confidence=.7))
inspect(sort(rules1k, by="confidence"))
inspect(sort(rules5k, by="confidence"))
inspect(sort(rules20k, by="confidence"))
inspect(sort(rules75k, by="confidence"))
library(arules)
library(arulesViz)
trans1k <- read.transactions("tr-1k-canonical.csv", sep=",")
trans5k <- read.transactions("tr-5k-canonical.csv", sep=",")
trans20k <- read.transactions("tr-20k-canonical.csv", sep=",")
trans75k <- read.transactions("tr-75k-canonical.csv", sep=",")
fset1k<-apriori(trans1k, parameter=list(support=0.035, target="frequent itemsets"))
fset5k<-apriori(trans5k, parameter=list(support=0.035, target="frequent itemsets"))
fset20k<-apriori(trans20k, parameter=list(support=0.035, target="frequent itemsets"))
fset75k<-apriori(trans75k, parameter=list(support=0.035, target="frequent itemsets"))
inspect(sort(fset1k, decreasing = T, by="count"))
inspect(sort(fset5k, decreasing = T, by="count"))
inspect(sort(fset20k, decreasing = T, by="count"))
inspect(sort(fset75k, decreasing = T, by="count"))
rules1k <- apriori(trans1k, parameter = list(support=0.035,confidence=.7))
rules5k <- apriori(trans5k, parameter = list(support=0.035,confidence=.7))
rules20k <- apriori(trans20k, parameter = list(support=0.035,confidence=.7))
rules75k <- apriori(trans75k, parameter = list(support=0.035,confidence=.7))
inspect(sort(rules1k, by="confidence"))
inspect(sort(rules5k, by="confidence"))
inspect(sort(rules20k, by="confidence"))
inspect(sort(rules75k, by="confidence"))
U_Id<-20439074%%671
U_Id
ratings<-read.csv("ratings.csv")
movies<-read.csv("movies.csv")
userId<-20439074%%671
gc()
ratings<-read.csv("ratings.csv")
movies<-read.csv("movies.csv")
userId<-20439074%%671
userProf<-r(1,2,3)
ratings<-read.csv("ratings.csv")
movies<-read.csv("movies.csv")
userId<-20439074%%671
userProf<-rbind(1,2,3)
View(userProf)
ratings<-read.csv("ratings.csv")
movies<-read.csv("movies.csv")
userId<-20439074%%671
userProf<-rbind(filter(ratings,ratings$userId==userId)))
ratings<-read.csv("ratings.csv")
movies<-read.csv("movies.csv")
userId<-20439074%%671
userProf<-rbind(filter(ratings,ratings$userId==userId)))
ratings<-read.csv("ratings.csv")
movies<-read.csv("movies.csv")
userId<-20439074%%671
userProf<-rbind(filter(ratings,ratings$userId==userId))
View(userProf)
ratings<-read.csv("ratings.csv")
movies<-read.csv("movies.csv")
userId<-20439074%%671
ratings$userId==userId
userProf<-rbind(filter(ratings,ratings$userId==userId))
ratings$userId==userId
View(userProf)
View(ratings)
ratings<-read.csv("ratings.csv")
movies<-read.csv("movies.csv")
userId<-20439074%%671
ratings$userId==userId
userProf<-c(filter(ratings,ratings$userId==userId))
ratings<-read.csv("ratings.csv")
movies<-read.csv("movies.csv")
userId<-20439074%%671
ratings<-read.csv("ratings.csv")
movies<-read.csv("movies.csv")
userId<-20439074%%671
ratings<-read.csv("ratings.csv")
movies<-read.csv("movies.csv")
Id<-20439074%%671
ratings<-read.csv("ratings.csv")
movies<-read.csv("movies.csv")
Id<-20439074%%671
filter(ratings,userId==Id)
View(ratings)
View(ratings)
ratings<-read.csv("ratings.csv")
movies<-read.csv("movies.csv")
Id<-20439074%%671
select(ratings,userId==Id)
ratings<-read.csv("ratings.csv")
movies<-read.csv("movies.csv")
Id<-20439074%%671
which(ratings,userId==Id)
ratings<-read.csv("ratings.csv")
movies<-read.csv("movies.csv")
Id<-20439074%%671
which(ratings,Id==userId)
View(ratings)
ratings<-read.csv("ratings.csv")
movies<-read.csv("movies.csv")
Id<-20439074%%671
filter(ratings,Id==userId)
ratings<-read.csv("ratings.csv")
movies<-read.csv("movies.csv")
Id<-20439074%%671
filter(ratings,userId=Id)
filter(ratings,userId==Id)
filter
?filter
library(dplyr)
ratings<-read.csv("ratings.csv")
movies<-read.csv("movies.csv")
Id<-20439074%%671
filter(ratings,userId==Id)
?df
?create.df
profile<-data.frame(x=userratings$movieId,y=20)
userratings<-filter(ratings,userId==Id)
profile<-data.frame(x=userratings$movieId,y=20)
View(userratings)
View(profile)
library(dplyr)
ratings<-read.csv("ratings.csv")
movies<-read.csv("movies.csv")
Id<-20439074%%671
userratings<-filter(ratings,userId==Id)
profile<-data.frame(x=userratings$movieId,y=1:20)
library(dplyr)
ratings<-read.csv("ratings.csv")
movies<-read.csv("movies.csv")
Id<-20439074%%671
userratings<-filter(ratings,userId==Id)
profile<-data.frame(x=userratings$movieId,y=c(1:20)
library(dplyr)
ratings<-read.csv("ratings.csv")
movies<-read.csv("movies.csv")
Id<-20439074%%671
userratings<-filter(ratings,userId==Id)
profile<-data.frame(x=userratings$movieId,y=1:20)
View(movies)
View(profile)
View(movies)
strsplit(movies$genres, '|')
strsplit(movies$genres, "|")
library(dplyr)
ratings<-read.csv("ratings.csv")
movies<-read.csv("movies.csv")
Id<-20439074%%671
userratings<-filter(ratings,userId==Id)
genres<-userratings$
usermovies<-filter(movies,userratings$movieId=movieId)
usermovies<-filter(movies,userratings$movieId==movieId)
usermovies<-filter(movies,movieId==userratings$movieId)
View(userratings)
View(usermovies)
View(movies)
View(usermovies)
View(userratings)
View(ratings)
View(movies)
usermovies<-df(userratings$movieId=movies$movieId)
usermovies<-df(userratings$movieId==movies$movieId)
usermovies<-df(userratings$movieId==movies$movieId,)
library(dplyr)
ratings<-read.csv("ratings.csv")
movies<-read.csv("movies.csv")
Id<-20439074%%671
userratings<-filter(ratings,userId==Id)
usermovies<-df(userratings$movieId==movies$movieId,)
usermovies<-filter(movies,userratings$movieId==movies$movieId)
usermovies<-subset(movies,userratings$movieId==movies$movieId)
usermovies<-df[movies$movieId==userratings$movieId]
library(dplyr)
ratings<-read.csv("ratings.csv")
movies<-read.csv("movies.csv")
Id<-20439074%%671
userratings<-filter(ratings,userId==Id)
library(dplyr)
ratings<-read.csv("ratings.csv")
movies<-read.csv("movies.csv")
Id<-20439074%%671
userratings<-filter(ratings,userId==Id)
genres<-strsplit(movies$genres, split = '|', fixed = TRUE)
View(genres)
library(dplyr)
ratings<-read.csv("ratings.csv")
movies<-read.csv("movies.csv")
Id<-20439074%%671
userratings<-filter(ratings,userId==Id)
genres<-strsplit(movies$genres[userratings$movieId], split = '|', fixed = TRUE)
View(genres)
movies$genres[userratings$movieId]
library(dplyr)
ratings<-read.csv("ratings.csv")
movies<-read.csv("movies.csv")
Id<-20439074%%671
userratings<-filter(ratings,userId==Id)
strsplit(movies$genres[userratings$movieId], split = '|')
library(dplyr)
ratings<-read.csv("ratings.csv")
movies<-read.csv("movies.csv")
Id<-20439074%%671
userratings<-filter(ratings,userId==Id)
genres<-strsplit(movies$genres[userratings$movieId], split = '|', fixed = TRUE)
View(genres)
genres[!duplicated(genres)]
View(genres)
View(genres)
View(genres)
genres[1]
unique(genres)
strplit(unique(genres), split=" ")
strsplit(unique(genres), split=" ")
strsplit(unique(genres), split="")
strsplit(unique(genres))
unique(genres)
library(dplyr)
ratings<-read.csv("ratings.csv")
movies<-read.csv("movies.csv")
Id<-20439074%%671
userratings<-filter(ratings,userId==Id)
genres<-strsplit(movies$genres[userratings$movieId], split = '|', fixed = TRUE)
unique(unique(genres))
library(arules)
library(arulesViz)
trans1k <- read.transactions("tr-1k-canonical.csv", sep=",")
trans5k <- read.transactions("tr-5k-canonical.csv", sep=",")
trans20k <- read.transactions("tr-20k-canonical.csv", sep=",")
trans75k <- read.transactions("tr-75k-canonical.csv", sep=",")
fset1k<-apriori(trans1k, parameter=list(support=0.035, target="frequent itemsets"))
fset5k<-apriori(trans5k, parameter=list(support=0.035, target="frequent itemsets"))
fset20k<-apriori(trans20k, parameter=list(support=0.035, target="frequent itemsets"))
fset75k<-apriori(trans75k, parameter=list(support=0.035, target="frequent itemsets"))
inspect(sort(fset1k, decreasing = T, by="count"))
inspect(sort(fset5k, decreasing = T, by="count"))
inspect(sort(fset20k, decreasing = T, by="count"))
inspect(sort(fset75k, decreasing = T, by="count"))
rules1k <- apriori(trans1k, parameter = list(support=0.035,confidence=.7))
rules5k <- apriori(trans5k, parameter = list(support=0.035,confidence=.7))
rules20k <- apriori(trans20k, parameter = list(support=0.035,confidence=.7))
rules75k <- apriori(trans75k, parameter = list(support=0.035,confidence=.7))
inspect(sort(rules1k, by="confidence"))
inspect(sort(rules5k, by="confidence"))
inspect(sort(rules20k, by="confidence"))
inspect(sort(rules75k, by="confidence"))
library(dplyr)
ratings<-read.csv("ratings.csv")
movies<-read.csv("movies.csv")
###UserVector
Id<-20439074%%671
userratings<-filter(ratings,userId==Id)
combination <- merge(userratings, movies)
all_genres<-c("movieId","Action", "Adventure", "Animation", "Children", "Comedy", "Crime", "Documentary", "Drama", "Fantasy",
"Film-Noir", "Horror", "IMAX", "Musical", "Mystery", "Romance", "Sci-Fi", "Thriller", "War", "Western", "(no
genres listed)")
user<-data.frame(matrix(NA,
nrow = nrow(userratings),
ncol = 21))
colnames(user)<-all_genres
user["movieId"]=userratings$movieId
movies_watched<-nrow(userratings)
for (i in 1:nrow(user)){
temp_genres<-strsplit(combination$genres, '|', fixed = TRUE)[[i]]
for( j in 1:ncol(user)){
for (k in 1:length(temp_genres))
if (temp_genres[k]==colnames(user)[j]){
user[i,j]=1
}
}
}
rm(temp_genres)
userProfile<-user[-1]
columnSums<-colSums(userProfile,na.rm=TRUE)
for(i in 1:length(columnSums)){
userProfile["avg",i]<-round(columnSums[i]/movies_watched,digits=3)
}
###MovieVector
my.cosine <- function (x,y){
sum(x*y)/(norm(x,type="2")*norm(y,type="2"))
}
r_10movies<-sample_n(movies, 10)
movie_profile<-data.frame(matrix(NA,
nrow = nrow(r_10movies),
ncol = 21))
colnames(movie_profile)<-all_genres
movie_profile["movieId"]=r_10movies$movieId
for (i in 1:nrow(movie_profile)){
temp_genres<-strsplit(r_10movies$genres, split = '|', fixed = TRUE)[[i]]
for( j in 2:ncol(movie_profile)){
for (k in 1:length(temp_genres)){
if (temp_genres[k]==colnames(movie_profile)[j]){
movie_profile[i,j]=1
}
}
}
}
movie_profile[is.na(movie_profile)] = 0
library(lsa)
chosen_movies<-data.frame(matrix(NA,
nrow = 10,
ncol = 3))
colnames(chosen_movies)<-c("movieId","title","similarity")
for( i in 1:nrow(movie_profile)){
movie_vector<-as.numeric(movie_profile[i, 2:21])
chosen_movies<-rbind(chosen_movies,data.frame(movieId = movie_profile[i, 1], title = movies[which(movies$movieId == movie_profile[i, 1]), 2], similarity = my.cosine(userProfile["avg",], movie_vector)))
}
chosen_movies <- chosen_movies[-c(1:10), ]
recommended<- chosen_movies[order(-chosen_movies$similarity),]
cat(paste("User ID ", Id ," chose the following 10 movies:",toString(r_10movies$movieId),"\n","Of these, the following 5 movies are recommended:"))
print(recommended[1:5,])
